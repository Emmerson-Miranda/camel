<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>edu.emmerson.camel3.cdi.rmq</groupId>
	<artifactId>cdi-rabbit-producer</artifactId>
	<packaging>jar</packaging>
	<version>1.0.1-SNAPSHOT</version>

	<name>Camel route using CDI in a standalone Java Container</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Camel BOM -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-parent</artifactId>
				<version>3.3.0</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- ************************* BLOCK START ************************* -->



<dependency>
    <groupId>org.apache.camel</groupId>
    <artifactId>camel-metrics</artifactId>
</dependency>



		<dependency>
			<groupId>edu.emmerson.camel3.cdi.shared</groupId>
			<artifactId>cdi-shared</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
		    <groupId>org.apache.camel</groupId>
		    <artifactId>camel-rabbitmq</artifactId>
		</dependency>	
		
		<!-- Undertow -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-undertow</artifactId>
		</dependency>

		<!-- Stream -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream</artifactId>
		</dependency>

		<!-- swagger -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-swagger-java</artifactId>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson</artifactId>
		</dependency>

		<!-- Enabling org.apache.camel.cdi.Main -->
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-weld</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-shaded</artifactId>
			<version>3.0.5.Final</version>
		</dependency>

		<!-- ************************* BLOCK END ************************* -->

		<dependency>
			<groupId>edu.emmerson.camel3.cdi.shared</groupId>
			<artifactId>cdi-shared</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		
		<!-- CDI API -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Camel CDI -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cdi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- testing -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>install</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- allows the routes to be run via 'mvn camel:run' -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
				<version>3.1.0</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.deltaspike.cdictrl</groupId>
						<artifactId>deltaspike-cdictrl-weld</artifactId>
						<version>1.9.0</version>
					</dependency>
					<dependency>
						<groupId>org.jboss.weld.se</groupId>
						<artifactId>weld-se-shaded</artifactId>
						<version>3.0.5.Final</version>
					</dependency>
				</dependencies>
			</plugin>


			<!-- ************************* BLOCK START ************************* -->

			<!-- Build an executable JAR with full list of dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>edu.emmerson.camel3.cdi.rmq.ProducerMainApp</mainClass>
							<classpathPrefix>dependency-jars/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- Copying all dependencies into a folder in the classpath -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>



			<!-- https://github.com/spotify/docker-maven-plugin -->
			<!-- Build the container: mvn clean package docker:build -->
			<!-- Start the container: $ docker run -d -p 8080:8080 cdi-user:1.0-SNAPSHOT -->
			<!-- Access to container: $ docker run -it cdi-user:1.0-SNAPSHOT /bin/bash 
				(when you comment the entrypoint) -->

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<baseImage>openjdk:8u121-alpine</baseImage>
					<workdir>/opt/${project.artifactId}</workdir>
					<exposes>
						<expose>8080</expose>
					</exposes>
					<entryPoint>["java", "-jar", "/opt/${project.artifactId}/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<resource>
							<targetPath>.</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>dependency-jars</targetPath>
							<directory>${project.build.directory}/dependency-jars</directory>
						</resource>
					</resources>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<labels>
						<label>Author=Emmerson</label>
						<label>Type=POC</label>
					</labels>
				</configuration>
			</plugin>


			<!-- ************************* BLOCK END ************************* -->


		</plugins>
	</build>

</project>
